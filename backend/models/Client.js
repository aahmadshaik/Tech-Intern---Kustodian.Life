const mongoose = require("mongoose");

const clientSchema = new mongoose.Schema({
  ClientId: { type: String, required: true },
  Name: { type: String, required: true },
  MobileNo: { type: String, required: true },
  CaseLocation: { type: String, required: true },
  ProductSubCategory: { type: String, required: true },
  Status: { type: String, required: true },
  Challenges: { type: String, required: true },
  DataTracker: { type: String, required: true },
  ReferralSource: { type: String, required: true },
  ClientLoc: { type: String, required: true },
  ClientAge: { type: Number, required: true },
  LeadDate: { type: Date, required: true },
  StartDate: { type: Date, required: true },
  EndDate: { type: Date, required: true },
  TimeSpent: { type: Number, required: true },
  ClaimAmount: { type: Number, required: true },
  FeesCharged: { type: Number, required: true },
  AgentCharge: { type: Number, required: true },
  Documents: { type: [String], required: true },
  Tasks: { type: [String], required: true },
  FollowupDate: { type: Date, required: true },
  AssignIssueStage: { type: [String], required: true },
  Priority: { type: String, required: true },
  FutureScope: { type: String, required: true },
  Email: { type: String, required: true },
  InvoiceLink: { type: String, required: true },
  Form15GLink: { type: String, required: true },
  EngagementLetterLink: { type: String, required: true },
  PFOffice: { type: String, required: true },
});

const Client = mongoose.model("Client", clientSchema);

// Insert pre-defined data
const insertDefaultData = async () => {
  const clients = [
    {
      ClientId: "C1234",
      Name: "John Doe",
      MobileNo: "9876543210",
      CaseLocation: "Mumbai",
      ProductSubCategory: "Personal Tax",
      Status: "In Progress",
      Challenges: "Complex Returns",
      DataTracker: "Daily",
      ReferralSource: "Referral",
      ClientLoc: "Mumbai",
      ClientAge: 35,
      LeadDate: new Date("2023-11-25"),
      StartDate: new Date("2023-11-26"),
      EndDate: new Date("2023-12-01"),
      TimeSpent: 5,
      ClaimAmount: 10000,
      FeesCharged: 5000,
      AgentCharge: 1000,
      Documents: ["Document1", "Document2"],
      Tasks: ["Task1", "Task2"],
      FollowupDate: new Date("2023-12-05"),
      AssignIssueStage: ["Issue1", "Issue2"],
      Priority: "High",
      FutureScope: "Follow-up meeting",
      Email: "johndoe@email.com",
      InvoiceLink: "[invalid URL removed]",
      Form15GLink: "[invalid URL removed]",
      EngagementLetterLink: "[invalid URL removed]",
      PFOffice: "Mumbai",
    },
    {
      ClientId: "C5678",
      Name: "Jane Smith",
      MobileNo: "9876543211",
      CaseLocation: "Delhi",
      ProductSubCategory: "Business Tax",
      Status: "Completed",
      Challenges: "Delayed Refunds",
      DataTracker: "Weekly",
      ReferralSource: "Self",
      ClientLoc: "Delhi",
      ClientAge: 42,
      LeadDate: "2023-11-20",
      StartDate: new Date("2023-11-21"),
      EndDate: new Date("2023-11-30"),
      TimeSpent: 8,
      ClaimAmount: 25000,
      FeesCharged: 7500,
      AgentCharge: 1500,
      Documents: ["Document3", "Document4"],
      Tasks: ["Task3", "Task4"],
      FollowupDate: new Date("2023-12-10"),
      AssignIssueStage: ["Issue3"],
      Priority: "Medium",
      FutureScope: "Finalize Audit",
      Email: "janesmith@email.com",
      InvoiceLink: "[invalid URL removed]",
      Form15GLink: "[invalid URL removed]",
      EngagementLetterLink: "[invalid URL removed]",
      PFOffice: "Delhi",
    },
    {
      ClientId: "C9012",
      Name: "Alex Patel",
      MobileNo: "9876543212",
      CaseLocation: "Bengaluru",
      ProductSubCategory: "Investment Planning",
      Status: "In Progress",
      Challenges: "Risk Assessment",
      DataTracker: "Daily",
      ReferralSource: "Referral",
      ClientLoc: "Bengaluru",
      ClientAge: 30,
      LeadDate: new Date("2023-11-22"),
      StartDate: new Date("2023-11-23"),
      EndDate: new Date("2023-12-07"),
      TimeSpent: 6,
      ClaimAmount: 0,
      FeesCharged: 2000,
      AgentCharge: 500,
      Documents: ["Document5"],
      Tasks: ["Task5", "Task6"],
      FollowupDate: new Date("2023-12-08"),
      AssignIssueStage: ["Issue4", "Issue5"],
      Priority: "Low",
      FutureScope: "Portfolio Review",
      Email: "alexpatel@email.com",
      InvoiceLink: "[invalid URL removed]",
      Form15GLink: "[invalid URL removed]",
      EngagementLetterLink: "[invalid URL removed]",
      PFOffice: "Bengaluru",
    },
  ];

  try {
    await Client.deleteMany({}); // Clear existing data
    await Client.insertMany(clients); // Insert new data
    console.log("Default data inserted");
  } catch (err) {
    console.error("Error inserting default data:", err);
  }
};

module.exports = { Client, insertDefaultData };
